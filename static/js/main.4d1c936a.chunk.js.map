{"version":3,"sources":["components/atoms/button/Button.tsx","components/atoms/container/Container.tsx","components/molecules/budget-select/BudgetSelect.tsx","lib/helpers/format.ts","components/atoms/toggle/Toggle.tsx","components/atoms/card/Card.tsx","components/atoms/card/CardSection.tsx","components/atoms/section-title/SectionTitle.tsx","components/molecules/checkbox-list/CheckboxList.tsx","components/atoms/icon/circle-check.svg","components/atoms/icon/Icon.tsx","components/molecules/transactions-list/TransactionItem.tsx","components/molecules/transactions-list/TransactionsList.tsx","components/pages/transactions/Transactions.tsx","lib/ynab-api/api-error.ts","lib/ynab-api/helpers.ts","lib/ynab-api/api-response.ts","lib/ynab-api/client.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","children","href","other","className","Container","BudgetSelect","useState","budgets","setBudgets","useEffect","data","localStorage","getItem","fetchedAt","time","now","Date","parseInt","getTime","isExpired","length","JSON","parse","client","getBudgets","then","setItem","stringify","toString","map","budget","onClick","onSelect","id","name","toUTCDateString","date","month","padStart","getUTCMonth","day","getUTCDate","getUTCFullYear","Toggle","type","role","aria-checked","value","onChange","label","aria-hidden","data-checked","Card","CardSection","SectionTitle","CheckboxList","refContainer","useRef","lastTarget","setLastTarget","descriptionElement","description","handleOnChange","labelClassName","size","items","ref","listClassName","event","target","current","HTMLInputElement","shiftKey","allInputs","Array","from","querySelectorAll","targetIndex","indexOf","lastTargetIndex","fromIndex","Math","min","toIndex","max","rangeValues","compact","slice","input","getAttribute","checked","selectedIds","Set","concat","rangeIds","filter","c","has","checkedInputs","item","htmlFor","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgCircleCheck","_ref","svgRef","title","titleId","xmlns","viewBox","IconName","ForwardRef","Icon","dateFormatter","Intl","DateTimeFormat","dateStyle","currencyFormatter","NumberFormat","style","currency","TransactionsListItem","trx","transaction","getCategoryName","isSelected","flagClassName","flag_color","modClassName","subsElement","subtransactions","memoElement","memo","selectedElement","payee_name","format","amount","account_name","category_id","ITEM_SELECTOR","TransactionsList","refList","transactions","HTMLElement","itemTarget","closest","preventDefault","handleClick","selectedTransactionIds","storageKeys","Transactions","budgetId","categoryGroups","setCategoryGroups","categoriesMap","useMemo","output","Map","forEach","group","categories","category","set","accounts","setAccounts","setTransactions","payees","setPayees","storedFromDate","fromDate","setFromDate","storedToDate","toDate","setToDate","storedValue","showTransfers","setShowTransfers","storedIds","selectedAccountIds","setSelectedAccountIds","selectedCategoryIds","setSelectedCategoryIds","selectedPayeeIds","setSelectedPayeeIds","setSelectedTransactionIds","getCategoryGroups","category_groups","getAccounts","account","getPayees","sortedPayees","sort","a","b","getTransactions","toISOString","removeItem","filteredTransactions","trxTime","fromTime","toTime","transfer_account_id","account_id","payee_id","categoryId","get","selectedTransactions","tr","ev","valueAsDate","selection","flatMap","transactionIds","targetId","isRemove","delete","add","ApiError","message","error","responseError","Error","isErrorResponse","undefined","ApiResponse","body","Client","accessToken","baseUrl","token","getRequest","urlPath","fetch","headers","Authorization","serverResponse","json","response","redirectUrl","window","location","origin","pathname","authorizationUrl","App","isInitializing","setIsInitializing","setAccessToken","storedToken","updateAccessToken","getUserInfo","catch","_err","finally","hash","replace","accessTokenParam","URLSearchParams","activeBudgetId","setActiveBudgetId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.4d1c936a.chunk.js","sourcesContent":["import { PropsWithChildren } from 'react'\nimport './Button.scss'\n\ntype Props = PropsWithChildren<{\n  href?: string\n}>\n\nfunction Button(props: Props) {\n  const { children, href, ...other } = props\n  if (href) {\n    return (\n      <a href={href} className=\"a-button\">\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <button className=\"a-button\" {...other}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import { HTMLProps } from 'react'\n\nimport './Container.scss'\n\ntype Props = HTMLProps<HTMLDivElement>\n\nfunction Container(props: Props) {\n  const { className, children, ...other } = props\n  return (\n    <div className={`a-container ${className || ''}`} {...other}>\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","import { PropsWithoutRef, useEffect, useState } from 'react'\nimport Client from '../../../lib/ynab-api/client'\nimport { BudgetSummary } from '../../../lib/ynab-api/types'\n\nimport './BudgetSelect.scss'\n\ntype Props = PropsWithoutRef<{\n  client: Client\n  onSelect(budgetId: string): void\n}>\n\nfunction isExpired(time: string) {\n  const now = new Date()\n  const fetchedAt = new Date(parseInt(time))\n  const difference = now.getTime() - fetchedAt.getTime()\n  return difference > 2 * 60 * 1000\n}\n\nfunction BudgetSelect(props: Props) {\n  const [budgets, setBudgets] = useState([] as BudgetSummary[])\n\n  useEffect(() => {\n    const data = localStorage.getItem('budgets')\n    const fetchedAt = localStorage.getItem('budgetsFetchedAt')\n    if (!data || !fetchedAt || isExpired(fetchedAt)) {\n      props.client.getBudgets().then((data) => {\n        setBudgets(data.budgets)\n        localStorage.setItem('budgets', JSON.stringify(data.budgets))\n        localStorage.setItem('budgetsFetchedAt', new Date().getTime().toString())\n      })\n    } else if (data && budgets.length === 0) {\n      setBudgets(JSON.parse(data))\n    }\n  }, [budgets, props.client])\n\n  return (\n    <div className=\"m-budgetSelect\">\n      <span>Select your budget:</span>\n      <ul className=\"m-budgetSelecti-list\">\n        {budgets.map((budget) => (\n          <li className=\"m-budgetSelect-item\" key={budget.id}>\n            <button className=\"m-budgetSelect-button\" onClick={() => props.onSelect(budget.id)}>\n              {budget.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default BudgetSelect\n","import padStart from 'lodash/padStart'\n\nexport function toUTCDateString(date: Date | null) {\n  if (!date) {\n    return ''\n  }\n\n  const month = padStart((date.getUTCMonth() + 1).toString(), 2, '0')\n  const day = padStart(date.getUTCDate().toString(), 2, '0')\n  return `${date.getUTCFullYear()}-${month}-${day}`\n}\n","import { PropsWithRef } from 'react'\nimport './Toggle.scss'\n\ntype Props = PropsWithRef<{\n  label: string\n  value: boolean\n  onChange: (checked: boolean) => any\n}>\n\nfunction Toggle(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"a-toggle\"\n      role=\"switch\"\n      aria-checked={props.value}\n      onClick={() => props.onChange(!props.value)}\n    >\n      <span className=\"sr-only\">{props.label}</span>\n      <span aria-hidden=\"true\" className=\"a-toggle-head\" data-checked={props.value}></span>\n    </button>\n  )\n}\n\nexport default Toggle\n","import { HTMLProps } from 'react'\n\nimport './Card.scss'\n\ntype Props = HTMLProps<HTMLDivElement>\n\nfunction Card(props: Props) {\n  const { className, ...other } = props\n  return <div className={`a-panel ${className || ''}`} {...other}></div>\n}\n\nexport default Card\n","import { HTMLProps } from 'react'\nimport './CardSection.scss'\n\ntype Props = HTMLProps<HTMLDivElement>\n\nfunction CardSection(props: Props) {\n  const { className, ...other } = props\n  return <div className={`a-card-section ${className || ''}`} {...other}></div>\n}\n\nexport default CardSection\n","import { HTMLProps } from 'react'\n\nimport './SectionTitle.scss'\n\ntype Props = HTMLProps<HTMLHeadingElement>\n\nfunction SectionTitle(props: Props) {\n  const { className, children, ...other } = props\n  return (\n    <h2 className={`a-sectionTitle ${className || ''}`} {...other}>\n      {children}\n    </h2>\n  )\n}\n\nexport default SectionTitle\n","import { MouseEvent, PropsWithoutRef, useRef, useState } from 'react'\nimport compact from 'lodash/compact'\nimport './CheckboxList.scss'\n\ninterface Item {\n  id: string\n  name: string\n}\n\ninterface Selection {\n  selectedIds: Set<string>\n}\n\ntype Props = PropsWithoutRef<{\n  className?: string\n  listClassName?: string\n  id: string\n  name: string\n  label: string\n  labelClassName?: string\n  description?: string\n  items: Item[]\n  value: Set<string>\n  onChange: (selection: Selection) => void\n}>\n\nfunction CheckboxList(props: Props) {\n  const refContainer = useRef<HTMLDivElement>(null)\n  const [lastTarget, setLastTarget] = useState(null as HTMLInputElement | null)\n\n  const descriptionElement = props.description ? <p className=\"text-gray-500\">{props.description}</p> : null\n\n  function handleOnChange() {\n    // No op. Used to make checkbox mutable\n  }\n\n  function handleContainerClick(event: MouseEvent) {\n    const target = event.target\n    if (refContainer.current && target instanceof HTMLInputElement) {\n      if (event.shiftKey && lastTarget) {\n        const allInputs = Array.from(refContainer.current.querySelectorAll('.m-checkboxList-input'))\n        const targetIndex = allInputs.indexOf(target)\n        const lastTargetIndex = allInputs.indexOf(lastTarget)\n        const fromIndex = Math.min(targetIndex, lastTargetIndex)\n        const toIndex = Math.max(targetIndex, lastTargetIndex)\n        const rangeValues = compact(\n          allInputs.slice(fromIndex, toIndex + 1).map((input) => input.getAttribute('value')),\n        )\n\n        if (target.checked) {\n          const selectedIds = new Set(Array.from(props.value).concat(rangeValues))\n          props.onChange({ selectedIds })\n        } else {\n          const rangeIds = new Set(rangeValues)\n          const selectedIds = new Set(Array.from(props.value).filter((c) => !rangeIds.has(c)))\n          props.onChange({ selectedIds })\n        }\n      } else {\n        const checkedInputs = refContainer.current.querySelectorAll('.m-checkboxList-input:checked')\n        const selectedIds = compact(Array.from(checkedInputs).map((input) => input.getAttribute('value')))\n        props.onChange({ selectedIds: new Set(selectedIds) })\n      }\n\n      setLastTarget(target)\n    }\n  }\n\n  return (\n    <div className={props.className}>\n      <div className={`m-checkboxList-label ${props.labelClassName || ''}`}>\n        {props.label}({props.value.size}/{props.items.length})\n      </div>\n      <div\n        ref={refContainer}\n        className={`mt-4 space-y-4 ${props.listClassName || ''}`}\n        onClick={handleContainerClick}\n      >\n        {props.items.map((item) => (\n          <div className=\"relative flex items-start\" key={item.id}>\n            <div className=\"flex items-center h-5\">\n              <input\n                name={props.name}\n                id={`${props.id}-${item.id}`}\n                value={item.id}\n                type=\"checkbox\"\n                className=\"m-checkboxList-input\"\n                checked={props.value.has(item.id)}\n                onChange={handleOnChange}\n              />\n            </div>\n            <div className=\"ml-3 text-sm\">\n              <label htmlFor={`${props.id}-${item.id}`} className=\"font-medium text-gray-700\">\n                {item.name}\n              </label>\n              {descriptionElement}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default CheckboxList\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M335 175L224 286.1L176.1 239c-9.375-9.375-24.56-9.375-33.94 0s-9.375 24.56 0 33.94l64 64C211.7 341.7 217.8 344 224 344s12.28-2.344 16.97-7.031l128-128c9.375-9.375 9.375-24.56 0-33.94S344.4 165.7 335 175zM256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM256 464c-114.7 0-208-93.31-208-208S141.3 48 256 48s208 93.31 208 208S370.7 464 256 464z\"\n});\n\nfunction SvgCircleCheck(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleCheck);\nexport default __webpack_public_path__ + \"static/media/circle-check.8166eca5.svg\";\nexport { ForwardRef as ReactComponent };","import './Icon.scss'\n\nimport { ReactComponent as CircleCheck } from './circle-check.svg'\nimport { PropsWithoutRef } from 'react'\n\nenum IconName {\n  circleCheck = 'circle-check',\n}\n\ntype Props = PropsWithoutRef<{ className?: string; name: keyof typeof IconName }>\n\nfunction Icon(props: Props) {\n  return <CircleCheck className={`a-icon ${props.className || ''}`} />\n}\n\nexport default Icon\n","import { HTMLProps } from 'react'\nimport { TransactionSummary } from '../../../lib/ynab-api/types'\nimport Icon from '../../atoms/icon/Icon'\nimport './TransactionItem.scss'\n\ntype Props = HTMLProps<HTMLLIElement> & {\n  transaction: TransactionSummary\n  getCategoryName: (categoryId: string) => string\n  isSelected?: boolean\n}\n\nconst dateFormatter = new Intl.DateTimeFormat('en-CA', {\n  dateStyle: 'full',\n})\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\n\nfunction TransactionsListItem(props: Props) {\n  const { transaction: trx, getCategoryName, isSelected, ...other } = props\n  const flagClassName = trx.flag_color ? `mod-${trx.flag_color}` : ''\n  const modClassName = isSelected ? 'mod-selected' : ''\n\n  const subsElement = trx.subtransactions.length > 0 ? <div>{JSON.stringify(trx.subtransactions)}</div> : null\n\n  const memoElement = trx.memo ? (\n    <span className=\"inline-block ml-3 text-sm text-gray-600\">– {trx.memo}</span>\n  ) : null\n\n  const selectedElement = isSelected ? (\n    <div className=\"m-transactionsList-item-selectedIcon\">\n      <Icon name=\"circleCheck\" />\n    </div>\n  ) : null\n\n  return (\n    <li className={`m-transactionsList-item ${modClassName}`} {...other}>\n      <div className={`m-transactionsList-item-wrapper ${flagClassName}`}>\n        <div>\n          <div>\n            <span className=\"font-medium\">{trx.payee_name}</span>\n            {memoElement}\n          </div>\n          <div>{currencyFormatter.format(trx.amount / 1000)}</div>\n          <div className=\"text-sm\">{trx.account_name}</div>\n          {subsElement}\n        </div>\n        <div className=\"text-right flex-col justify-between\">\n          <div>\n            {dateFormatter.format(new Date(trx.date))}\n            <br />\n            {getCategoryName(trx.category_id)}\n          </div>\n          {selectedElement}\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TransactionsListItem\n","import { MouseEvent, PropsWithoutRef, useRef, useState } from 'react'\nimport type * as t from '../../../lib/ynab-api/types'\nimport TransactionsListItem from './TransactionItem'\n\nimport './TransactionsList.scss'\n\ntype Props = PropsWithoutRef<{\n  className?: string\n  getCategoryName: (categoryId: string) => string\n  transactions: t.TransactionSummary[]\n  onSelect?: (transactionIds: string[], targetId: string) => void\n  selectedTransactionIds?: Set<string>\n}>\n\nconst ITEM_SELECTOR = '.m-transactionsList-item'\n\nfunction TransactionsList(props: Props) {\n  const refList = useRef<HTMLUListElement>(null)\n  const [lastTarget, setLastTarget] = useState(null as HTMLElement | null)\n\n  function handleClick(event: MouseEvent, transaction: t.TransactionSummary) {\n    const { target } = event\n    if (props.onSelect && target instanceof HTMLElement) {\n      let selectedIds = [transaction.id]\n      const itemTarget = target.closest(ITEM_SELECTOR)\n      if (refList.current && itemTarget instanceof HTMLElement) {\n        if (event.shiftKey && lastTarget) {\n          event.preventDefault()\n          const items = Array.from(refList.current.querySelectorAll(ITEM_SELECTOR))\n          const targetIndex = items.indexOf(itemTarget)\n          const lastTargetIndex = items.indexOf(lastTarget)\n          const fromIndex = Math.min(targetIndex, lastTargetIndex)\n          const toIndex = Math.max(targetIndex, lastTargetIndex)\n          selectedIds = props.transactions.slice(fromIndex, toIndex + 1).map((trx) => trx.id)\n        }\n\n        setLastTarget(itemTarget)\n      }\n\n      props.onSelect(selectedIds, transaction.id)\n    }\n  }\n\n  return (\n    <div className={`m-transactionsList ${props.className || ''}`}>\n      <ul ref={refList} className=\"m-transactionsList-container\">\n        {props.transactions.map((trx) => (\n          <TransactionsListItem\n            key={trx.id}\n            transaction={trx}\n            getCategoryName={props.getCategoryName}\n            onClick={(event) => handleClick(event, trx)}\n            isSelected={props.selectedTransactionIds?.has(trx.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default TransactionsList\n","import flatMap from 'lodash/flatMap'\nimport { PropsWithoutRef, useEffect, useMemo, useState } from 'react'\nimport { toUTCDateString } from '../../../lib/helpers/format'\nimport type Client from '../../../lib/ynab-api/client'\nimport type * as t from '../../../lib/ynab-api/types'\nimport Toggle from '../../atoms/toggle/Toggle'\nimport * as cards from '../../atoms/card'\nimport SectionTitle from '../../atoms/section-title/SectionTitle'\nimport CheckboxList from '../../molecules/checkbox-list/CheckboxList'\nimport TransactionsList from '../../molecules/transactions-list/TransactionsList'\n\nimport './Transactions.scss'\n\ntype Props = PropsWithoutRef<{ budgetId: string; client: Client }>\n\nconst storageKeys = {\n  dateRangeFrom: 'fromDateFilter',\n  dateRangeTo: 'toDateFilter',\n  selectedAccountIds: 'selectedAccountIds',\n  selectedCategoryIds: 'selectedCategoryIds',\n  selectedPayeeIds: 'selectedPayeeIds',\n  selectedTransactions: 'selectedTransactions',\n  showTransfers: 'showTransfersFilter',\n}\n\nfunction Transactions(props: Props) {\n  const { budgetId } = props\n\n  // Budget Entities\n\n  const [categoryGroups, setCategoryGroups] = useState(null as t.CategoryGroupWithCategories[] | null)\n  const categoriesMap = useMemo(() => {\n    const output = new Map<string, { name: string }>()\n    categoryGroups?.forEach((group) => {\n      group.categories.forEach((category) => {\n        output.set(category.id, { name: `${category.name} (${group.name})` })\n      })\n    })\n\n    return output\n  }, [categoryGroups])\n\n  const [accounts, setAccounts] = useState(null as t.Account[] | null)\n\n  const [transactions, setTransactions] = useState(null as t.TransactionSummary[] | null)\n\n  const [payees, setPayees] = useState(null as t.Payee[] | null)\n\n  // Filters\n\n  const [fromDate, setFromDate] = useState(() => {\n    const storedFromDate = localStorage.getItem(storageKeys.dateRangeFrom)\n    if (storedFromDate) {\n      return new Date(storedFromDate)\n    }\n\n    return null\n  })\n\n  const [toDate, setToDate] = useState(() => {\n    const storedToDate = localStorage.getItem(storageKeys.dateRangeTo)\n    if (storedToDate) {\n      return new Date(storedToDate)\n    }\n\n    return null\n  })\n\n  const [showTransfers, setShowTransfers] = useState(() => {\n    const storedValue = localStorage.getItem(storageKeys.showTransfers)\n    if (storedValue) {\n      return storedValue !== 'false'\n    }\n\n    return true\n  })\n\n  const [selectedAccountIds, setSelectedAccountIds] = useState(() => {\n    const storedIds = localStorage.getItem(storageKeys.selectedAccountIds)\n    if (storedIds) {\n      return new Set<string>(JSON.parse(storedIds))\n    }\n\n    return new Set<string>([])\n  })\n\n  const [selectedCategoryIds, setSelectedCategoryIds] = useState(() => {\n    const storedIds = localStorage.getItem(storageKeys.selectedCategoryIds)\n    if (storedIds) {\n      return new Set<string>(JSON.parse(storedIds))\n    }\n\n    return new Set<string>([])\n  })\n\n  const [selectedPayeeIds, setSelectedPayeeIds] = useState(() => {\n    const storedIds = localStorage.getItem(storageKeys.selectedPayeeIds)\n    if (storedIds) {\n      return new Set<string>(JSON.parse(storedIds))\n    }\n\n    return new Set<string>([])\n  })\n\n  const [selectedTransactionIds, setSelectedTransactionIds] = useState(() => {\n    const storedIds = localStorage.getItem(storageKeys.selectedTransactions)\n    if (storedIds) {\n      return new Set<string>(JSON.parse(storedIds))\n    }\n\n    return new Set<string>([])\n  })\n\n  // Fetch budget items from server\n  useEffect(() => {\n    if (!categoryGroups) {\n      props.client.getCategoryGroups(budgetId).then((data) => setCategoryGroups(data.category_groups))\n    }\n\n    if (!accounts) {\n      props.client.getAccounts(budgetId).then((data) => {\n        setAccounts(data.accounts)\n        setSelectedAccountIds(new Set(data.accounts.map((account) => account.id)))\n      })\n    }\n\n    if (!payees) {\n      props.client.getPayees(budgetId).then((data) => {\n        const sortedPayees = data.payees.sort((a, b) => (a.name < b.name ? -1 : a.name === b.name ? 0 : 1))\n        setPayees(sortedPayees)\n        setSelectedPayeeIds(new Set(data.payees.map(({ id }) => id)))\n      })\n    }\n\n    if (!transactions) {\n      props.client.getTransactions(budgetId).then((data) => setTransactions(data.transactions))\n    }\n  }, [props.client, budgetId, categoryGroups, accounts, payees, transactions])\n\n  useEffect(() => {\n    if (fromDate) {\n      localStorage.setItem(storageKeys.dateRangeFrom, fromDate.toISOString())\n    } else {\n      localStorage.removeItem(storageKeys.dateRangeFrom)\n    }\n\n    if (toDate) {\n      localStorage.setItem(storageKeys.dateRangeTo, toDate.toISOString())\n    } else {\n      localStorage.removeItem(storageKeys.dateRangeTo)\n    }\n\n    localStorage.setItem(storageKeys.showTransfers, JSON.stringify(showTransfers))\n\n    localStorage.setItem(storageKeys.selectedAccountIds, JSON.stringify(Array.from(selectedAccountIds)))\n\n    localStorage.setItem(storageKeys.selectedCategoryIds, JSON.stringify(Array.from(selectedCategoryIds)))\n\n    localStorage.setItem(storageKeys.selectedPayeeIds, JSON.stringify(Array.from(selectedPayeeIds)))\n\n    localStorage.setItem(storageKeys.selectedTransactions, JSON.stringify(Array.from(selectedTransactionIds)))\n  }, [\n    fromDate,\n    toDate,\n    showTransfers,\n    selectedAccountIds,\n    selectedCategoryIds,\n    selectedPayeeIds,\n    selectedTransactionIds,\n  ])\n\n  const filteredTransactions: t.TransactionSummary[] = useMemo(() => {\n    if (!transactions) {\n      return []\n    }\n\n    return transactions.filter((trx) => {\n      if (fromDate && toDate) {\n        const trxTime = new Date(trx.date).getTime()\n        const fromTime = fromDate.getTime()\n        const toTime = toDate.getTime()\n        if (!(fromTime <= trxTime && trxTime <= toTime)) {\n          return false\n        }\n      }\n\n      if (!showTransfers && trx.transfer_account_id) {\n        return false\n      }\n\n      if (!selectedAccountIds.has(trx.account_id)) {\n        return false\n      }\n\n      if (!selectedCategoryIds.has(trx.category_id)) {\n        return false\n      }\n\n      if (!selectedPayeeIds.has(trx.payee_id)) {\n        return false\n      }\n\n      return true\n    })\n  }, [\n    transactions,\n    fromDate,\n    toDate,\n    showTransfers,\n    selectedAccountIds,\n    selectedCategoryIds,\n    selectedPayeeIds,\n  ])\n\n  function handleSelectTransaction(transactionIds: string[], targetId: string) {\n    const isRemove = selectedTransactionIds.has(targetId)\n    transactionIds.forEach((id) => {\n      if (isRemove) {\n        selectedTransactionIds.delete(id)\n      } else {\n        selectedTransactionIds.add(id)\n      }\n    })\n\n    setSelectedTransactionIds(new Set(selectedTransactionIds))\n  }\n\n  const getCategoryName = (categoryId: string) => categoriesMap.get(categoryId)?.name || categoryId\n\n  if (!categoryGroups || !accounts || !payees || !transactions) {\n    return <span>Loading...</span>\n  }\n\n  const selectedTransactions = transactions.filter((tr) => selectedTransactionIds.has(tr.id))\n\n  // Other filters: memo, flags, amount range, payees\n  return (\n    <>\n      <SectionTitle>Filters</SectionTitle>\n      <cards.Card>\n        <cards.Section>\n          <h3 className=\"p-transactions-filterHeading\">Date Range</h3>\n          <input\n            className=\"p-transactions-dateInput\"\n            type=\"date\"\n            value={toUTCDateString(fromDate)}\n            onChange={(ev) => setFromDate(ev.target.valueAsDate)}\n          />\n          <span className=\"inline-block mx-5\"> – </span>\n          <input\n            className=\"p-transactions-dateInput\"\n            type=\"date\"\n            value={toUTCDateString(toDate)}\n            onChange={(ev) => setToDate(ev.target.valueAsDate)}\n          />\n        </cards.Section>\n        <cards.Section>\n          <div className=\"flex items-center mt-4\">\n            <Toggle\n              label=\"Show Transfer\"\n              value={showTransfers}\n              onChange={(checked) => setShowTransfers(checked)}\n            />\n            <h3\n              className=\"p-transactions-filterHeading mod-toggleLabel\"\n              onClick={() => setShowTransfers(!showTransfers)}\n            >\n              Show Transfers\n            </h3>\n          </div>\n        </cards.Section>\n        <cards.Section>\n          <CheckboxList\n            id=\"accounts\"\n            name=\"accounts\"\n            label=\"Accounts\"\n            items={accounts.map(({ id, name }) => ({ id, name }))}\n            className=\"p-transactions-checkboxList\"\n            labelClassName=\"p-transactions-filterHeading\"\n            listClassName=\"p-transactions-checkboxList-list\"\n            value={selectedAccountIds}\n            onChange={(selection) => setSelectedAccountIds(selection.selectedIds)}\n          />\n        </cards.Section>\n        <cards.Section>\n          <CheckboxList\n            id=\"categories\"\n            name=\"categories\"\n            label=\"Categories\"\n            items={flatMap(\n              categoryGroups.map((group) =>\n                group.categories.map(({ id, name }) => ({\n                  id,\n                  name: `${name} (${group.name})`,\n                })),\n              ),\n            )}\n            className=\"p-transactions-checkboxList\"\n            labelClassName=\"p-transactions-filterHeading\"\n            listClassName=\"p-transactions-checkboxList-list\"\n            value={selectedCategoryIds}\n            onChange={(selection) => setSelectedCategoryIds(selection.selectedIds)}\n          />\n        </cards.Section>\n        <cards.Section>\n          <CheckboxList\n            id=\"payees\"\n            name=\"payees\"\n            label=\"Payees\"\n            items={payees.map(({ id, name }) => ({ id, name }))}\n            className=\"p-transactions-checkboxList\"\n            labelClassName=\"p-transactions-filterHeading\"\n            listClassName=\"p-transactions-checkboxList-list\"\n            value={selectedPayeeIds}\n            onChange={(selection) => setSelectedPayeeIds(selection.selectedIds)}\n          />\n        </cards.Section>\n      </cards.Card>\n      <SectionTitle>\n        Transactions ({selectedTransactionIds.size}/{filteredTransactions.length})\n      </SectionTitle>\n      <div className=\"p-transactions-window\">\n        <TransactionsList\n          transactions={filteredTransactions}\n          getCategoryName={getCategoryName}\n          onSelect={handleSelectTransaction}\n          selectedTransactionIds={selectedTransactionIds}\n        />\n      </div>\n      <SectionTitle>Selected Transactions ({selectedTransactions.length})</SectionTitle>\n      <div className=\"p-transactions-window\">\n        <TransactionsList transactions={selectedTransactions} getCategoryName={getCategoryName} />\n      </div>\n    </>\n  )\n}\n\nexport default Transactions\n","import { ApiResponseError } from './types'\n\nexport class ApiError extends Error {\n  public readonly responseError: ApiResponseError\n\n  constructor(message: string, error: ApiResponseError) {\n    super(message)\n    this.responseError = error\n  }\n}\n","import { YnabApiResponse, ApiErrorResponse } from './types'\n\nexport function isErrorResponse(\n  data: YnabApiResponse<any>,\n): data is ApiErrorResponse {\n  return (data as ApiErrorResponse).error !== undefined\n}\n","import { isErrorResponse } from './helpers'\nimport { ApiResponseError, YnabApiResponse } from './types'\n\nexport class ApiResponse<T> {\n  private readonly body: YnabApiResponse<T>\n\n  constructor(data: YnabApiResponse<T>) {\n    this.body = data\n  }\n\n  get data(): T | null {\n    if (isErrorResponse(this.body)) {\n      return null\n    }\n\n    return this.body.data\n  }\n\n  get error(): ApiResponseError | null {\n    if (isErrorResponse(this.body)) {\n      return this.body.error\n    }\n\n    return null\n  }\n}\n","import { ApiError } from './api-error'\nimport { ApiResponse } from './api-response'\nimport type * as t from './types'\n\nexport default class Client {\n  private accessToken: string = ''\n  private baseUrl = 'https://api.youneedabudget.com/v1'\n\n  constructor(accessToken?: string) {\n    if (accessToken) {\n      this.accessToken = accessToken\n    }\n  }\n\n  updateAccessToken(token: string) {\n    this.accessToken = token\n  }\n\n  async getUserInfo() {\n    return await this.getRequest<t.UserInfo>('/user')\n  }\n\n  async getBudgets() {\n    return await this.getRequest<{ budgets: t.BudgetSummary[] }>('/budgets')\n  }\n\n  async getTransactions(budgetId: string) {\n    return await this.getRequest<{ transactions: t.TransactionSummary[] }>(\n      `/budgets/${budgetId}/transactions`,\n    )\n  }\n\n  async getCategoryGroups(budgetId: string) {\n    return await this.getRequest<{\n      category_groups: t.CategoryGroupWithCategories[]\n    }>(`/budgets/${budgetId}/categories`)\n  }\n\n  async getAccounts(budgetId: string) {\n    return await this.getRequest<{ accounts: t.Account[] }>(\n      `/budgets/${budgetId}/accounts`,\n    )\n  }\n\n  async getPayees(budgetId: string) {\n    return await this.getRequest<{ payees: t.Payee[] }>(\n      `/budgets/${budgetId}/payees`,\n    )\n  }\n\n  private async getRequest<T>(urlPath: string) {\n    const serverResponse = await fetch(this.baseUrl + urlPath, {\n      headers: { Authorization: `Bearer ${this.accessToken}` },\n    })\n\n    const json = await serverResponse.json()\n    const response = new ApiResponse<T>(json)\n    if (response.data) {\n      return response.data\n    } else if (response.error) {\n      throw new ApiError(response.error.name, response.error)\n    } else {\n      throw new Error('Unhandled server response')\n    }\n  }\n}\n","import { useEffect, useState } from 'react'\n\nimport Button from './components/atoms/button/Button'\nimport Container from './components/atoms/container/Container'\nimport BudgetSelect from './components/molecules/budget-select/BudgetSelect'\nimport Transactions from './components/pages/transactions/Transactions'\nimport Client from './lib/ynab-api/client'\nimport './App.scss'\n\nconst CLIENT_ID = '71591f4ec6dae7f1ff9a3b58f5a33064478f1b56f3e5a1642352292580bc88a3'\n\nconst redirectUrl = window.location.origin + window.location.pathname\nconst authorizationUrl = `https://app.youneedabudget.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${redirectUrl}&response_type=token`\nconst client = new Client()\n\nfunction App() {\n  const [isInitializing, setIsInitializing] = useState(true)\n  const [accessToken, setAccessToken] = useState(null as string | null)\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('accessToken')\n    if (storedToken) {\n      client.updateAccessToken(storedToken)\n      client\n        .getUserInfo()\n        .then(() => {\n          setAccessToken(storedToken)\n        })\n        .catch((_err) => {\n          localStorage.removeItem('accessToken')\n          setAccessToken(null)\n        })\n        .finally(() => {\n          setIsInitializing(false)\n        })\n    } else {\n      const hash = window.location.hash.replace('#', '')\n      const params = new URLSearchParams(hash)\n      const accessTokenParam = params.get('access_token')\n      if (accessTokenParam) {\n        localStorage.setItem('accessToken', accessTokenParam)\n        window.location.href = redirectUrl\n      }\n\n      setIsInitializing(false)\n    }\n  }, [accessToken])\n\n  const [activeBudgetId, setActiveBudgetId] = useState(null as string | null)\n\n  useEffect(() => {\n    const budgetId = localStorage.getItem('activeBudgetId')\n    if (budgetId) {\n      setActiveBudgetId(budgetId)\n    } else if (activeBudgetId) {\n      localStorage.setItem('activeBudgetId', activeBudgetId)\n    }\n  }, [activeBudgetId])\n\n  if (isInitializing) {\n    return <div>Initializing...</div>\n  }\n\n  if (!accessToken) {\n    return (\n      <div className=\"app-authorize\">\n        <Button href={authorizationUrl}>Connect with YNAB</Button>\n      </div>\n    )\n  }\n\n  if (!activeBudgetId) {\n    return (\n      <div className=\"app-budgets\">\n        <BudgetSelect client={client} onSelect={(budgetId: string) => setActiveBudgetId(budgetId)} />\n      </div>\n    )\n  }\n\n  return (\n    <Container className=\"app-transactions\">\n      <Transactions budgetId={activeBudgetId} client={client} />\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}